openapi: "3.0.0"
info:
  title: Dogy Backend API
  description: |-
    Documentation for Dogy Backend API.
                      Please message @Sheape if you have any questions.
  version: 0.1.0
tags:
  - name: User
    description: User endpoints
  - name: Health check
    description: Health check endpoints
paths:
  /:
    get:
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthcheck'
      operationId: getIndex
      summary: Health check
      description: Check if the server is running
      tags:
        - Health check
  /api/v1/:
    get:
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthcheck.v1'
      operationId: getApiV1
      summary: Health check for v1
      description: Health check
      tags:
        - Health check
  /api/v1/users/{id}:
    get:
      parameters:
        - description: |-
            Clerk User ID (Optional). If not provided,
                                the current user's ID will be used.
          schema:
            type: string
            title: User ID
            minLength: 32
            maxLength: 32
          in: path
          name: id
          required: false
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users.getResponse'
      operationId: getApiV1UsersById
      summary: Get User by ID
      description: Get user by Clerk ID.
      tags:
        - User
components:
  schemas:
    healthcheck:
      type: object
      properties:
        message:
          description: Message if the server is running
          example: Welcome to Dogy API
          type: string
      required:
        - message
    healthcheck.v1:
      type: object
      properties:
        message:
          description: Message if the endpoint for v1 is running
          example: Welcome to Dogy API v1
          type: string
      required:
        - message
    users.getResponse:
      type: object
      allOf:
        - title: User
          description: User
          type: object
          properties:
            externalId:
              maxLength: 32
              type: string
              description: Clerk ID of the user
              examples:
                - user_2ruHSXCzfIRreR2tpttVQBl512a
            name:
              maxLength: 255
              type: string
              description: User's name
              examples:
                - John Doe
            timezone:
              maxLength: 30
              type: string
              description: User's timezone
              examples:
                - Europe/Sweden
            gender:
              anyOf:
                - const: male
                  type: string
                - const: female
                  type: string
              description: Gender of the user
              examples:
                - male
            hasOnboarded:
              type: boolean
              description: Has the user onboarded?
              examples:
                - false
          required:
            - externalId
            - name
            - timezone
            - gender
            - hasOnboarded
        - title: Subscription
          description: User's subscription
          type: object
          properties:
            subscription:
              title: UserSubscription
              description: User subscription schema
              examples:
              # - trialStartDate: '2025-01-22'
              #   subscriptionType: active
              #   isRegistered: true
              #   isTrialMode: true
              type: object
              properties:
                trialStartDate:
                  type: string
                  examples:
                    - '2025-01-22'
                subscriptionType:
                  anyOf:
                    - const: active
                      type: string
                    - const: inactive
                      type: string
                    - const: unknown
                      type: string
                  examples:
                    - active
                isRegistered:
                  type: boolean
                  examples:
                    - false
                isTrialMode:
                  type: boolean
                  examples:
                    - false
              required:
                - trialStartDate
                - subscriptionType
          required:
            - subscription
